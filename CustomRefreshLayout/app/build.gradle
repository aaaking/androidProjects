apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools
    defaultConfig {
        applicationId applicationId
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versionCode
        versionName versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file("../keystore/customrefreshlayout.jks")
            storePassword "customrefreshlayout"
            //命令行密码 /storePassword System.console().readLine("\ninput Keystore password: ")
            keyAlias "customrefreshlayout"
            keyPassword "customrefreshlayout"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled true//Setting minifyEnabled to true enables Proguard
            buildConfigField("String", "GOOGLE_VERIFICATION_API_KEY", '"AIzaSyAXp_YJBHPI4FLfJrlgjfFjMXbIVZWeKzk"')
            buildConfigField("boolean", "IS_SAFETY_NET_ENABLED", "false")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled true//Setting minifyEnabled to true enables Proguard
            buildConfigField("String", "GOOGLE_VERIFICATION_API_KEY", '"AIzaSyAXp_YJBHPI4FLfJrlgjfFjMXbIVZWeKzk"')
            buildConfigField("boolean", "IS_SAFETY_NET_ENABLED", "false")
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                def prefix = outputFile.name.substring(0, outputFile.name.length() - 4)
                outputFileName = prefix + "-v${defaultConfig.versionName}-${variant.buildType.getName()}.apk"
            }
        }
    }
    flavorDimensions "default"
    productFlavors {
        GooglePlay {
        }
        YingYongBao {
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation ('com.willowtreeapps.assertk:assertk:0.9', {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    })
    implementation project(path: ':flexiblerefreshlayout')
    implementation project(path: ':swipedismiss')
    implementation supportDependencies.design
    implementation supportDependencies.cardview
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    // for room
    implementation "android.arch.persistence.room:runtime:1.0.0-beta1"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-beta1"
    // for rxJava
    implementation "io.reactivex.rxjava2:rxjava:2.1.5"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
}
